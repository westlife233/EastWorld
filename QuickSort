/*
排序
给定一个长度为N的数组
将数组进行正序排列后打印
输入:
第一行 整数N (1<N<100)  表示数组中有N个元素
第二行 N个整数En(0 < E < 10000)  表示数组的每个元素
样例输入:
9
1 7 5 9 8 2 4 3 6
样例输出:
1 2 3 4 5 6 7 8 9
*/
#include<stdio.h>
#define N 100//数组的最大长度为100

void QuickSort(int array[], int l, int r);//定义一个通过快速排列法对数组中的元素进行正序排列的函数
int main()
{
	int array[N] = { 0 };
	int n = 0;//储存数组中的元素数量
	int i = 0;//循环所需变量，用于遍历数组元素
	printf("请输入数组中的元素数量N（1<N<100）:");
	scanf("%d", &n);
	while (n < 1 || n>100)
	{
		printf("请输入1-100的数字:");
		scanf("%d", &n);
	}
	printf("请输入%d个数组元素：",n);
	for (i = 0; i < n; i++)
	{
		scanf("%d", &array[i]);
	}
	QuickSort(array, 0, n - 1);
	for (i = 0; i < n; i++)
	{
		printf("%d\t", array[i]);
	}

}
/*
函数功能：对数组进行升序排列
参数：含有需要排列的元素的数组
*/
void QuickSort(int array[], int l, int r)
{
	if (l < r)
	{
		int i = l, j = r;
		int X = array[l];//初始时i=0，j=n-1，取区间第一个数为基准数保存在X中
						 //此后每次将递归调用传入的基准数调整后的位置的前后元素作为基准数

		//先从后往前找出一个比基准数小的数放入基准数在数组中的位置
		while (i < j)
		{
			while (i < j && array[j] > X)
				j--;
			if (i < j)
			{
				array[i] = array[j];
				i++;
			 }
			//再从前往后找出一个比基准数大的数，赋值给前一个放入基准数位置的元素
			while (i < j && array[i] < X)
				i++;
			if (i < j)
			{
				array[j] = array[i];
				j--;
			}

		}
	//当i=j时，退出循环，，再将基准数放在数组的中间
	//此时基准数左边的数均比它小，右边的数均比它大
	array[i] = X;
	QuickSort(array, l, i - 1);//递归调用
	QuickSort(array, i + 1, r);
	}
}
